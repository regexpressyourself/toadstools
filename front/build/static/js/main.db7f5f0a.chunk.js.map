{"version":3,"sources":["services/api/play.js","components/Play/components/PlayInfo.js","components/Play/components/PlayArt.js","components/Play/PlayWrapper.js","components/Home.js","components/Countdown.js","components/Router.js","index.js"],"names":["getSongData","songData","setSongData","user","a","console","log","axios","get","data","song","PlayInfo","useParams","font","color","text","useRef","useState","width","setWidth","displayFont","songText","artist","album","useEffect","link","document","createElement","setAttribute","head","appendChild","current","clientWidth","Info","elWidth","fontFamily","replace","InfoItem","elOffset","Hide","ref","styled","div","props","span","PlayArt","alt","src","image","PlayWrapper","view","timer","setInterval","clearInterval","Home","to","Countdown","countdown","setCountdown","setText","seconds","setSeconds","minutes","setMinutes","Section","for","max","type","min","id","onChange","target","value","disabled","onClick","sec","slice","section","Router","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db7f5f0a.chunk.js","sourcesContent":["import axios from \"axios\";\nexport const getSongData = async (songData, setSongData, user) => {\n  console.log(\"user\");\n  console.log(user);\n  const { data } = await axios.get(\n    `/playing/${user && user}`\n  );\n  if (songData.song !== data.song) {\n    setSongData(data);\n  }\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nfunction PlayInfo({ songData }) {\n  const { font, color } = useParams();\n  console.log(\"color\")\n  console.log(color)\n  const text = useRef(null);\n  const [width, setWidth] = useState(0);\n  const [displayFont] = useState(font === \"gh\" ? \"Gloria Hallelujah\" : font);\n\n  const songText = `${songData.song} // ${songData.artist} // ${songData.album}`;\n\n  useEffect(() => {\n    if (displayFont) {\n      const link = document.createElement(\"link\");\n      link.setAttribute(\n        \"href\",\n        `https://fonts.googleapis.com/css2?family=${displayFont}&display=swap`\n      );\n      link.setAttribute(\"rel\", \"stylesheet\");\n\n      document.head.appendChild(link);\n    }\n  }, [displayFont]);\n\n  useEffect(() => {\n    const width = text.current && text.current.clientWidth + 1;\n    setWidth(width);\n  }, [songData]);\n\n  return !songData.song ? null : (\n    <Info\n      elWidth={width}\n      color={color}\n      fontFamily={displayFont && displayFont.replace(\"+\", \" \")}\n    >\n      <InfoItem elWidth={width}>{songText}</InfoItem>\n      <InfoItem elWidth={width} elOffset={width}>\n        {songText}\n      </InfoItem>\n      <Hide ref={text}>{songText}</Hide>\n    </Info>\n  );\n}\n\nexport default PlayInfo;\nconst Info = styled.div`\n  font-family: ${props => props.fontFamily};\n  color: ${props => props.color};\n  position: relative !important;\n  width: 300px;\n  height: 45px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: all 220ms ease-in-out;\n  white-space: nowrap;\n`;\nconst InfoItem = styled.span`\n  animation: scroll ${props => props.elWidth / 42}s linear 0s infinite;\n  position: absolute;\n  left: ${props => props.elOffset + 50 || 0}px;\n  @keyframes scroll {\n    0% {\n      transform: translate(0, 0);\n    }\n    100% {\n      transform: translate(-${props => props.elWidth + 50 || 0}px, 0);\n    }\n  }\n`;\nconst Hide = styled.div`\n  position: absolute;\n  visibility: hidden;\n  height: auto;\n  width: auto;\n  white-space: nowrap; /* Thanks to Herb Caudill comment */\n`;\n","import React from \"react\";\n\nfunction PlayArt({ songData }) {\n  return <img alt=\"--\" src={songData.image} />;\n}\n\nexport default PlayArt;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getSongData } from \"../../services/api/play\";\nimport PlayInfo from \"./components/PlayInfo\";\nimport PlayArt from \"./components/PlayArt\";\n\nfunction PlayWrapper({ view }) {\n  const [songData, setSongData] = useState({});\n  const { user } = useParams();\n\n  useEffect(() => {\n    getSongData(songData, setSongData, user);\n    const timer = setInterval(() => {\n      getSongData(songData, setSongData, user);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [songData, songData.song, user]);\n\n  switch (view) {\n    case \"art\":\n      return <PlayArt songData={songData} />;\n    case \"info\":\n      return <PlayInfo songData={songData} />;\n    default:\n      return null;\n  }\n}\n\nexport default PlayWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nfunction Home() {\n  return (\n    <>\n      <h1>PSST</h1>\n      <p>\n        Pretty\n        <br />\n        Sweet\n        <br />\n        Streaming\n        <br />\n        Tools\n        <br />\n      </p>\n      <Link to=\"/play/zookeeprr/info/Gloria+Hallelujah\">\n        Sam's now playing info\n      </Link>\n      <br />\n      <Link to=\"/play/zookeeprr/art\">Sam's now playing art</Link>\n      <br />\n      <Link to=\"/countdown/Gloria+Hallelujah\">Countdown timer</Link>\n    </>\n  );\n}\n\nexport default Home;\nconst Info = styled.div`\n  font-family: ${props => props.fontFamily};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nfunction Countdown() {\n  const { font } = useParams();\n  const [displayFont] = useState(font === \"gh\" ? \"Gloria Hallelujah\" : font);\n  const [countdown, setCountdown] = useState(null);\n  const [text, setText] = useState(\"Done\");\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n\n  useEffect(() => {\n    if (displayFont) {\n      const link = document.createElement(\"link\");\n      link.setAttribute(\n        \"href\",\n        `https://fonts.googleapis.com/css2?family=${displayFont}&display=swap`\n      );\n      link.setAttribute(\"rel\", \"stylesheet\");\n\n      document.head.appendChild(link);\n    }\n  }, [displayFont]);\n\n  const startTimer = () => {\n    let min = minutes;\n    let sec = seconds;\n\n    setInterval(function() {\n      setCountdown(\n        `${min || \"0\"}:${sec < 10 ? \"0\" + (\"0\" + sec).slice(-1) : sec}`\n      );\n\n      if (--sec < 0 && min >= 0) {\n        --min;\n        sec = 59;\n      }\n      if (min < 0) {\n        setCountdown(text);\n      }\n    }, 1000);\n  };\n\n  return countdown ? (\n    <Section fontFamily={displayFont && displayFont.replace(\"+\", \" \")}>\n      <p>{countdown}</p>\n    </Section>\n  ) : (\n    <Section fontFamily={displayFont && displayFont.replace(\"+\", \" \")}>\n      <label for=\"seconds\">Seconds</label>{\" \"}\n      <input\n        max=\"59\"\n        type=\"number\"\n        min=\"0\"\n        id=\"seconds\"\n        onChange={({ target }) => setSeconds(target.value)}\n      />\n      <br />\n      <label for=\"minutes\">Minutes</label>{\" \"}\n      <input\n        max=\"59\"\n        min=\"0\"\n        type=\"number\"\n        id=\"minutes\"\n        onChange={({ target }) => setMinutes(target.value)}\n      />\n      <br />\n      <label for=\"text\">Completion text</label>{\" \"}\n      <input\n        type=\"text\"\n        id=\"text\"\n        value={text}\n        onChange={({ target }) => setText(target.value)}\n      />\n      <br />\n      <button disabled={minutes > 59 || seconds > 59} onClick={startTimer}>\n        Start Timer\n      </button>\n    </Section>\n  );\n}\n\nexport default Countdown;\nconst Section = styled.section`\n  font-family: ${props => props.fontFamily};\n`;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport PlayWrapper from \"./Play/PlayWrapper\";\nimport Home from \"./Home\";\nimport Countdown from \"./Countdown\";\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/countdown\">\n          <Countdown />\n        </Route>\n        <Route exact path=\"/countdown/:font\">\n          <Countdown />\n        </Route>\n        <Route exact path=\"/play/art\">\n          <PlayWrapper view=\"art\" />\n        </Route>\n        <Route exact path=\"/play/:user/art\">\n          <PlayWrapper view=\"art\" />\n        </Route>\n        <Route exact path=\"/play/info\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play/:user/info\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play/info/:font\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play/:user/info/:font\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play/:user/info/:font/:color\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './components/Router';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}