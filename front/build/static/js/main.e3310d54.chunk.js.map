{"version":3,"sources":["hooks/useQueryParams.js","services/api/play.js","hooks/useFont.js","components/Play/components/PlayInfo.js","components/Play/components/PlayArt.js","components/Play/PlayWrapper.js","components/Home.js","components/Countdown.js","components/Custom.js","components/Router.js","index.js"],"names":["useQuery","URLSearchParams","useLocation","search","getSongData","songData","setSongData","user","a","axios","get","data","song","useFont","font","useQueryParams","useState","setFont","displayFont","useEffect","link","document","createElement","setAttribute","head","appendChild","PlayInfo","query","text","useRef","width","setWidth","songText","artist","album","current","clientWidth","Info","elWidth","color","fontFamily","replace","InfoItem","elOffset","Hide","ref","styled","div","props","span","PlayArt","alt","src","image","PlayWrapper","view","timer","setInterval","clearInterval","Home","HomeWrapper","to","section","Countdown","seconds","countdown","setCountdown","sec","min","parseInt","slice","Section","Span","fonts","Custom","chosenFont","setChosenFont","redirect","username","setUsername","setColor","time","setTime","push","htmlFor","value","type","id","onChange","target","Colorblock","map","Option","key","onClick","window","open","option","Router","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3310d54.chunk.js","sourcesContent":["import { useLocation } from \"react-router-dom\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import axios from \"axios\";\nexport const getSongData = async (songData, setSongData, user) => {\n  const { data } = await axios.get(`/playing/${user && user}`);\n  if (songData.song !== data.song) {\n    setSongData(data);\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport useQueryParams from \"./useQueryParams\";\n\nconst setFont = font => {\n  if (!font || font === \"undefined\") {\n    return \"sans-serif\";\n  }\n  if (font === \"gh\") {\n    return \"Gloria Hallelujah\";\n  }\n  return font;\n};\n\nfunction useFont() {\n  const query = useQueryParams();\n  const font = query.get(\"font\");\n  const [displayFont] = useState(setFont(font));\n\n  useEffect(() => {\n    if (displayFont) {\n      const link = document.createElement(\"link\");\n      link.setAttribute(\n        \"href\",\n        `https://fonts.googleapis.com/css2?family=${displayFont}&display=swap`\n      );\n      link.setAttribute(\"rel\", \"stylesheet\");\n\n      document.head.appendChild(link);\n    }\n  }, [displayFont]);\n\n  return displayFont;\n}\n\nexport default useFont;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useFont from \"../../../hooks/useFont\";\nimport useQueryParams from \"../../../hooks/useQueryParams\";\n\nfunction PlayInfo({ songData }) {\n  const query = useQueryParams();\n  const text = useRef(null);\n  const [width, setWidth] = useState(0);\n  const displayFont = useFont();\n\n  const songText = `${songData.song} // ${songData.artist} // ${songData.album}`;\n\n  useEffect(() => {\n    const width = text.current && text.current.clientWidth + 1;\n    setWidth(width);\n  }, [songData]);\n\n  return !songData.song ? null : (\n    <Info\n      elWidth={width}\n      color={query.get(\"color\")}\n      fontFamily={displayFont && displayFont.replace(\"+\", \" \")}\n    >\n      <InfoItem elWidth={width}>{songText}</InfoItem>\n      <InfoItem elWidth={width} elOffset={width}>\n        {songText}\n      </InfoItem>\n      <Hide ref={text}>{songText}</Hide>\n    </Info>\n  );\n}\n\nexport default PlayInfo;\nconst Info = styled.div`\n  font-family: ${props => props.fontFamily};\n  color: ${props => props.color};\n  position: relative !important;\n  width: 4500;\n  height: 500px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: all 220ms ease-in-out;\n  white-space: nowrap;\n`;\nconst InfoItem = styled.span`\n  animation: scroll ${props => props.elWidth / 100}s linear 0s infinite;\n  position: absolute;\n  left: ${props => props.elOffset + 50 || 0}px;\n  @keyframes scroll {\n    0% {\n      transform: translate(0, 0);\n    }\n    100% {\n      transform: translate(-${props => props.elWidth + 50 || 0}px, 0);\n    }\n  }\n`;\nconst Hide = styled.div`\n  position: absolute;\n  visibility: hidden;\n  height: auto;\n  width: auto;\n  white-space: nowrap; /* Thanks to Herb Caudill comment */\n`;\n","import React from \"react\";\n\nfunction PlayArt({ songData }) {\n  return <img alt=\"--\" src={songData.image} />;\n}\n\nexport default PlayArt;\n","import React, { useEffect, useState } from \"react\";\nimport useQueryParams from \"../../hooks/useQueryParams\";\nimport { getSongData } from \"../../services/api/play\";\nimport PlayInfo from \"./components/PlayInfo\";\nimport PlayArt from \"./components/PlayArt\";\n\nfunction PlayWrapper({ view }) {\n  const [songData, setSongData] = useState({});\n  const query = useQueryParams();\n  const user = query.get(\"user\");\n\n  useEffect(() => {\n    getSongData(songData, setSongData, user);\n    const timer = setInterval(() => {\n      getSongData(songData, setSongData, user);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [songData, songData.song, user]);\n\n  switch (view) {\n    case \"art\":\n      return <PlayArt songData={songData} />;\n    case \"info\":\n      return <PlayInfo songData={songData} />;\n    default:\n      return null;\n  }\n}\n\nexport default PlayWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nfunction Home() {\n  return (\n    <HomeWrapper>\n      <h1>PSST</h1>\n      <p>\n        <em>Pretty Sweet Streaming Tools</em>\n      </p>\n      <Link to=\"/custom\">\n        <button>Make your own!</button>\n      </Link>\n      <br />\n      <br />\n      <hr />\n      Or see:\n      <ul>\n        <li>\n          <Link to=\"/play/info?user=zookeeprr&font=Gloria+Hallelujah\">\n            Sam's now playing info\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/play/art?user=zookeeprr\">Sam's now playing art</Link>\n        </li>\n        <li>\n          <Link to=\"/countdown/?font=Gloria+Hallelujah\">5 minute timer</Link>\n        </li>\n      </ul>\n    </HomeWrapper>\n  );\n}\n\nexport default Home;\nconst HomeWrapper = styled.section`\n  font-size: 28px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useFont from \"../hooks/useFont\";\nimport useQueryParams from \"../hooks/useQueryParams\";\n\nfunction Countdown() {\n  const query = useQueryParams();\n  const seconds = query.get(\"seconds\") || 300;\n  const displayFont = useFont();\n  const [countdown, setCountdown] = useState(null);\n\n  useEffect(() => {\n    let sec = seconds % 60;\n    let min = parseInt(seconds / 60);\n\n    setInterval(function() {\n      setCountdown(\n        `${min || \"0\"}:${sec < 10 ? \"0\" + (\"0\" + sec).slice(-1) : sec}`\n      );\n\n      if (--sec < 0 && min >= 0) {\n        --min;\n        sec = 59;\n      }\n      if (min < 0) {\n        setCountdown(\"a moment!\");\n      }\n    }, 1000);\n  }, [seconds]);\n\n  return !countdown ? null : (\n    <Section fontFamily={displayFont && displayFont.replace(\"+\", \" \")}>\n      <Span color={query.get(\"color\")}>{countdown}</Span>\n    </Section>\n  );\n}\n\nexport default Countdown;\nconst Section = styled.section`\n  font-family: ${props => props.fontFamily};\n`;\nconst Span = styled.span`\n  color: ${props => props.color};\n`;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst fonts = [\n  \"sans-serif\",\n  \"Anton\",\n  \"Gloria+Hallelujah\",\n  \"Indie+Flower\",\n  \"Josefin+Sans\"\n];\n\nfunction Custom() {\n  const [chosenFont, setChosenFont] = useState();\n  const [redirect, setRedirect] = useState();\n  const [username, setUsername] = useState();\n  const [color, setColor] = useState();\n  const [time, setTime] = useState();\n\n  return redirect ? (\n    <Redirect push to={redirect} />\n  ) : (\n    <>\n      <Section fontFamily={chosenFont}>\n        <h1>PSST</h1>\n        <p>\n          <em>Pretty Sweet Streaming Tools</em>\n        </p>\n      </Section>\n      <hr />\n      <Section fontFamily={chosenFont}>\n        <h2>Now playing info:</h2>\n        <br />\n        <label htmlFor=\"username\">Last.fm Username</label>{\" \"}\n        <input\n          value={username}\n          type=\"text\"\n          id=\"username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <br />\n        <label htmlFor=\"color\">\n          Color <Colorblock color={color} />\n        </label>{\" \"}\n        <input\n          type=\"text\"\n          value={color}\n          id=\"color\"\n          onChange={({ target }) => setColor(target.value)}\n        />\n        <br />\n        <label htmlFor=\"font\">Font choice</label>{\" \"}\n        <select\n          value={(chosenFont && chosenFont.replace(\" \", \"+\")) || \"\"}\n          onChange={({ target }) =>\n            setChosenFont(target.value.replace(\"+\", \" \"))\n          }\n        >\n          {fonts.map(font => (\n            <Option key={font} fontFamily={font} value={font}>\n              {font.replace(\"+\", \" \")}\n            </Option>\n          ))}\n        </select>\n        <br />\n        <button\n          onClick={() =>\n            window.open(\n              `/play/info?user=${username}&font=${chosenFont}&color=${color}`,\n              \"_blank\"\n            )\n          }\n        >\n          See Now Playing Info\n        </button>\n        <br />\n        or\n        <br />\n        <button\n          onClick={() =>\n            window.open(\n              `/play/art?user=${username}&font=${chosenFont}&color=${color}`,\n              \"_blank\"\n            )\n          }\n        >\n          See Now Playing Art\n        </button>\n      </Section>\n      <hr />\n      <Section fontFamily={chosenFont}>\n        <h2>Countdown timer:</h2>\n        <br />\n        <label htmlFor=\"time\">Time (in seconds)</label>{\" \"}\n        <input\n          type=\"number\"\n          id=\"time\"\n          value={time}\n          onChange={({ target }) => setTime(target.value)}\n        />\n        <br />\n        <label htmlFor=\"color\">\n          Color <Colorblock color={color} />\n        </label>{\" \"}\n        <input\n          type=\"text\"\n          value={color}\n          id=\"color\"\n          onChange={({ target }) => setColor(target.value)}\n        />\n        <br />\n        <label htmlFor=\"font\">Font choice</label>{\" \"}\n        <select\n          value={(chosenFont && chosenFont.replace(\" \", \"+\")) || \"\"}\n          onChange={({ target }) =>\n            setChosenFont(target.value.replace(\"+\", \" \"))\n          }\n        >\n          {fonts.map(font => (\n            <Option key={font} fontFamily={font} value={font}>\n              {font.replace(\"+\", \" \")}\n            </Option>\n          ))}\n        </select>\n        <br />\n        <button\n          onClick={() =>\n            window.open(\n              `/countdown?seconds=${time}&font=${chosenFont}&color=${color}`,\n              \"_blank\"\n            )\n          }\n        >\n          Start timer\n        </button>\n      </Section>\n      <hr />\n    </>\n  );\n}\n\nexport default Custom;\nconst Section = styled.section`\n  font-size: 28px;\n  font-family: ${props => props.fontFamily};\n  color: ${props => props.color || \"black\"};\n`;\nconst Option = styled.option`\n  font-family: ${props => props.fontFamily};\n`;\nconst Colorblock = styled.span`\n  color: ${props => props.color || \"black\"};\n  position: absolute;\n  height: 20px;\n  width: 20px;\n  background-color: ${props => props.color || \"black\"};\n`;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport PlayWrapper from \"./Play/PlayWrapper\";\nimport Home from \"./Home\";\nimport Countdown from \"./Countdown\";\nimport Custom from \"./Custom\";\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/custom\">\n          <Custom />\n        </Route>\n        <Route exact path=\"/countdown\">\n          <Countdown />\n        </Route>\n        <Route exact path=\"/play/art\">\n          <PlayWrapper view=\"art\" />\n        </Route>\n        <Route exact path=\"/play/info\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './components/Router';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}