{"version":3,"sources":["Play/Play.js","Play/components/PlayInfo.js","Play/components/PlayArt.js","Play/PlayWrapper.js","Router.js","index.js"],"names":["Play","useState","songData","setSongData","useEffect","getSongData","a","axios","get","data","song","setInterval","artist","album","alt","src","image","PlayInfo","font","useParams","text","useRef","width","setWidth","displayFont","songText","link","document","createElement","setAttribute","head","appendChild","current","clientWidth","Info","elWidth","fontFamily","replace","InfoItem","elOffset","Hide","ref","styled","div","props","span","PlayArt","PlayWrapper","view","Router","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c062ffeb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Play() {\n  const [songData, setSongData] = useState({});\n\n  useEffect(() => {\n    const getSongData = async () => {\n      const { data } = await axios.get(\"http://localhost:8000/playing\");\n      if (songData.song !== data.song) {\n        setSongData(data);\n      }\n    };\n    getSongData();\n    setInterval(() => {\n      getSongData();\n    }, 5000);\n  }, [songData.song]);\n\n  return (\n    <>\n      {songData.song}\n      <br />\n      {songData.artist}\n      <br />\n      {songData.album}\n      <br />\n      <img alt=\"--\" src={songData.image} />\n    </>\n  );\n}\n\nexport default Play;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nfunction PlayInfo({ songData }) {\n  const { font } = useParams();\n  const text = useRef(null);\n  const [width, setWidth] = useState(0);\n  const [displayFont] = useState(font === \"gh\" ? \"Gloria Hallelujah\" : font);\n\n  const songText = `${songData.song} // ${songData.artist} // ${songData.album}`;\n\n  useEffect(() => {\n    if (displayFont) {\n      const link = document.createElement(\"link\");\n      link.setAttribute(\n        \"href\",\n        `https://fonts.googleapis.com/css2?family=${displayFont}&display=swap`\n      );\n      link.setAttribute(\"rel\", \"stylesheet\");\n\n      document.head.appendChild(link);\n    }\n  }, [displayFont]);\n\n  useEffect(() => {\n    const width = text.current && text.current.clientWidth + 1;\n    setWidth(width);\n  }, [songData]);\n\n  return (\n    <Info\n      elWidth={width}\n      fontFamily={displayFont && displayFont.replace(\"+\", \" \")}\n    >\n      <InfoItem elWidth={width}>{songText}</InfoItem>\n      <InfoItem elWidth={width} elOffset={width}>\n        {songText}\n      </InfoItem>\n      <Hide ref={text}>{songText}</Hide>\n    </Info>\n  );\n}\n\nexport default PlayInfo;\nconst Info = styled.div`\n  font-family: ${props => props.fontFamily};\n  position: relative !important;\n  width: 300px;\n  height: 45px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: all 220ms ease-in-out;\n  white-space: nowrap;\n`;\nconst InfoItem = styled.span`\n  animation: scroll ${props => props.elWidth / 42}s linear 0s infinite;\n  position: absolute;\n  left: ${props => props.elOffset + 50 || 0}px;\n  @keyframes scroll {\n    0% {\n      transform: translate(0, 0);\n    }\n    100% {\n      transform: translate(-${props => props.elWidth + 50 || 0}px, 0);\n    }\n  }\n`;\nconst Hide = styled.div`\n  position: absolute;\n  visibility: hidden;\n  height: auto;\n  width: auto;\n  white-space: nowrap; /* Thanks to Herb Caudill comment */\n`;\n","import React from \"react\";\n\nfunction PlayArt({ songData }) {\n  return <img alt=\"--\" src={songData.image} />;\n}\n\nexport default PlayArt;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PlayInfo from \"./components/PlayInfo\";\nimport PlayArt from \"./components/PlayArt\";\n\nfunction PlayWrapper({ view }) {\n  const [songData, setSongData] = useState({});\n\n  useEffect(() => {\n    const getSongData = async () => {\n      const { data } = await axios.get(\"http://localhost:8000/playing\");\n      if (songData.song !== data.song) {\n        setSongData(data);\n      }\n    };\n    getSongData();\n    setInterval(() => {\n      getSongData();\n    }, 5000);\n  }, [songData.song]);\n\n  switch (view) {\n    case \"art\":\n      return <PlayArt songData={songData} />;\n    case \"info\":\n      return <PlayInfo songData={songData} />;\n    default:\n      return null;\n  }\n}\n\nexport default PlayWrapper;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Play from \"./Play/Play\";\nimport PlayWrapper from \"./Play/PlayWrapper\";\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route exact path=\"/play/art\">\n          <PlayWrapper view=\"art\" />\n        </Route>\n        <Route exact path=\"/play/:user/art\">\n          <PlayWrapper view=\"art\" />\n        </Route>\n        <Route exact path=\"/play/info\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play/:user/info\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play/info/:font\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play/:user/info/:font\">\n          <PlayWrapper view=\"info\" />\n        </Route>\n        <Route exact path=\"/play\">\n          <Play />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}